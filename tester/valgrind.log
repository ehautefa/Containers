==131051== Memcheck, a memory error detector
==131051== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==131051== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==131051== Command: ./test
==131051== Parent PID: 131046
==131051== 
==131051== Invalid read of size 8
==131051==    at 0x402464: ft::node<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::destruct_all_node() (node.hpp:75)
==131051==    by 0x402413: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::clear() (map.hpp:132)
==131051==    by 0x401D0C: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::operator=(ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > > const&) (map.hpp:64)
==131051==    by 0x401392: test_operator() (6.cpp:35)
==131051==    by 0x401922: main (6.cpp:71)
==131051==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==131051== 
==131051== 
==131051== Process terminating with default action of signal 11 (SIGSEGV)
==131051==  Access not within mapped region at address 0x10
==131051==    at 0x402464: ft::node<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::destruct_all_node() (node.hpp:75)
==131051==    by 0x402413: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::clear() (map.hpp:132)
==131051==    by 0x401D0C: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::operator=(ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > > const&) (map.hpp:64)
==131051==    by 0x401392: test_operator() (6.cpp:35)
==131051==    by 0x401922: main (6.cpp:71)
==131051==  If you believe this happened as a result of a stack
==131051==  overflow in your program's main thread (unlikely but
==131051==  possible), you can try to increase the size of the
==131051==  main thread stack using the --main-stacksize= flag.
==131051==  The main thread stack size used in this run was 8388608.
==131051== 
==131051== HEAP SUMMARY:
==131051==     in use at exit: 168 bytes in 3 blocks
==131051==   total heap usage: 12 allocs, 9 frees, 74,288 bytes allocated
==131051== 
==131051== 56 bytes in 1 blocks are still reachable in loss record 1 of 3
==131051==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==131051==    by 0x402633: __gnu_cxx::new_allocator<ft::node<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > > >::allocate(unsigned long, void const*) (new_allocator.h:115)
==131051==    by 0x401B12: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::operator[](char const&) (map.hpp:98)
==131051==    by 0x40130F: test_operator() (6.cpp:31)
==131051==    by 0x401922: main (6.cpp:71)
==131051== 
==131051== 56 bytes in 1 blocks are still reachable in loss record 2 of 3
==131051==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==131051==    by 0x402633: __gnu_cxx::new_allocator<ft::node<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > > >::allocate(unsigned long, void const*) (new_allocator.h:115)
==131051==    by 0x401BF4: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::operator[](char const&) (map.hpp:103)
==131051==    by 0x40133C: test_operator() (6.cpp:32)
==131051==    by 0x401922: main (6.cpp:71)
==131051== 
==131051== 56 bytes in 1 blocks are still reachable in loss record 3 of 3
==131051==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==131051==    by 0x402633: __gnu_cxx::new_allocator<ft::node<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > > >::allocate(unsigned long, void const*) (new_allocator.h:115)
==131051==    by 0x401BF4: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::operator[](char const&) (map.hpp:103)
==131051==    by 0x401369: test_operator() (6.cpp:33)
==131051==    by 0x401922: main (6.cpp:71)
==131051== 
==131051== LEAK SUMMARY:
==131051==    definitely lost: 0 bytes in 0 blocks
==131051==    indirectly lost: 0 bytes in 0 blocks
==131051==      possibly lost: 0 bytes in 0 blocks
==131051==    still reachable: 168 bytes in 3 blocks
==131051==         suppressed: 0 bytes in 0 blocks
==131051== 
==131051== For lists of detected and suppressed errors, rerun with: -s
==131051== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
