==212286== Memcheck, a memory error detector
==212286== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==212286== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==212286== Command: ./test
==212286== Parent PID: 212281
==212286== 
==212286== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==212286== 
==212286== Process terminating with default action of signal 11 (SIGSEGV)
==212286==  Access not within mapped region at address 0x1FFE801FF8
==212286== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==212286==    at 0x407C78: ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > >::destruct_all_node() (node.hpp:81)
==212286==  If you believe this happened as a result of a stack
==212286==  overflow in your program's main thread (unlikely but
==212286==  possible), you can try to increase the size of the
==212286==  main thread stack using the --main-stacksize= flag.
==212286==  The main thread stack size used in this run was 8388608.
==212286== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==212286== 
==212286== Process terminating with default action of signal 11 (SIGSEGV)
==212286==  Access not within mapped region at address 0x1FFE801FE8
==212286== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==212286==    at 0x4831134: _vgnU_freeres (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so)
==212286==  If you believe this happened as a result of a stack
==212286==  overflow in your program's main thread (unlikely but
==212286==  possible), you can try to increase the size of the
==212286==  main thread stack using the --main-stacksize= flag.
==212286==  The main thread stack size used in this run was 8388608.
==212286== 
==212286== HEAP SUMMARY:
==212286==     in use at exit: 73,920 bytes in 5 blocks
==212286==   total heap usage: 132 allocs, 127 frees, 82,048 bytes allocated
==212286== 
==212286== 64 bytes in 1 blocks are still reachable in loss record 1 of 5
==212286==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==212286==    by 0x407056: __gnu_cxx::new_allocator<ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > > >::allocate(unsigned long, void const*) (new_allocator.h:115)
==212286==    by 0x406D96: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::_init_leaf() (map.hpp:144)
==212286==    by 0x403C10: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::map(std::less<char> const&, std::allocator<ft::pair<char const, int> > const&) (map.hpp:61)
==212286==    by 0x403407: test_erase() (6.cpp:226)
==212286==    by 0x4035A5: main (6.cpp:286)
==212286== 
==212286== 64 bytes in 1 blocks are still reachable in loss record 2 of 5
==212286==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==212286==    by 0x407056: __gnu_cxx::new_allocator<ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > > >::allocate(unsigned long, void const*) (new_allocator.h:115)
==212286==    by 0x406E51: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::_init_leaf() (map.hpp:147)
==212286==    by 0x403C10: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::map(std::less<char> const&, std::allocator<ft::pair<char const, int> > const&) (map.hpp:61)
==212286==    by 0x403407: test_erase() (6.cpp:226)
==212286==    by 0x4035A5: main (6.cpp:286)
==212286== 
==212286== 64 bytes in 1 blocks are still reachable in loss record 3 of 5
==212286==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==212286==    by 0x407056: __gnu_cxx::new_allocator<ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > > >::allocate(unsigned long, void const*) (new_allocator.h:115)
==212286==    by 0x407255: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::add_a_node(ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > >*, unsigned long, char const&) (map.hpp:152)
==212286==    by 0x403D8B: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::operator[](char const&) (map.hpp:126)
==212286==    by 0x4034A6: test_erase() (6.cpp:236)
==212286==    by 0x4035A5: main (6.cpp:286)
==212286== 
==212286== 1,024 bytes in 1 blocks are still reachable in loss record 4 of 5
==212286==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==212286==    by 0x4C33E83: _IO_file_doallocate (filedoalloc.c:101)
==212286==    by 0x4C4404F: _IO_doallocbuf (genops.c:347)
==212286==    by 0x4C430AF: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:745)
==212286==    by 0x4C41834: _IO_new_file_xsputn (fileops.c:1244)
==212286==    by 0x4C41834: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1197)
==212286==    by 0x4C35540: fwrite (iofwrite.c:39)
==212286==    by 0x4996823: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==212286==    by 0x4996BDB: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==212286==    by 0x403E04: void debug<char, int>(ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >&) (6.cpp:29)
==212286==    by 0x401CA9: test_constructor() (6.cpp:108)
==212286==    by 0x403578: main (6.cpp:277)
==212286== 
==212286== 72,704 bytes in 1 blocks are still reachable in loss record 5 of 5
==212286==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==212286==    by 0x4909A99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==212286==    by 0x4011B89: call_init.part.0 (dl-init.c:72)
==212286==    by 0x4011C90: call_init (dl-init.c:30)
==212286==    by 0x4011C90: _dl_init (dl-init.c:119)
==212286==    by 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
==212286== 
==212286== LEAK SUMMARY:
==212286==    definitely lost: 0 bytes in 0 blocks
==212286==    indirectly lost: 0 bytes in 0 blocks
==212286==      possibly lost: 0 bytes in 0 blocks
==212286==    still reachable: 73,920 bytes in 5 blocks
==212286==         suppressed: 0 bytes in 0 blocks
==212286== 
==212286== For lists of detected and suppressed errors, rerun with: -s
==212286== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
