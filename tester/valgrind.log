==102467== Memcheck, a memory error detector
==102467== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==102467== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==102467== Command: ./test
==102467== Parent PID: 102462
==102467== 
==102467== 
==102467== Process terminating with default action of signal 2 (SIGINT)
==102467==    at 0x4CBA0A5: write (write.c:26)
==102467==    by 0x4C3AEBC: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1181)
==102467==    by 0x4C3C980: new_do_write (fileops.c:449)
==102467==    by 0x4C3C980: _IO_new_do_write (fileops.c:426)
==102467==    by 0x4C3C980: _IO_do_write@@GLIBC_2.2.5 (fileops.c:423)
==102467==    by 0x4C3CEC2: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:784)
==102467==    by 0x4993258: std::ostream::put(char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==102467==    by 0x49934D7: std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==102467==    by 0x409C1F: ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > >::display() (node.hpp:71)
==102467==    by 0x409918: ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > >::debug(int, char) (node.hpp:76)
==102467==    by 0x409941: ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > >::debug(int, char) (node.hpp:78)
==102467==    by 0x409941: ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > >::debug(int, char) (node.hpp:78)
==102467==    by 0x40996A: ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > >::debug(int, char) (node.hpp:80)
==102467==    by 0x40996A: ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > >::debug(int, char) (node.hpp:80)
==102467== 
==102467== HEAP SUMMARY:
==102467==     in use at exit: 448 bytes in 7 blocks
==102467==   total heap usage: 14 allocs, 7 frees, 74,496 bytes allocated
==102467== 
==102467== 64 bytes in 1 blocks are still reachable in loss record 1 of 7
==102467==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==102467==    by 0x407606: __gnu_cxx::new_allocator<ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==102467==    by 0x40733C: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::_init_leaf() (map.hpp:144)
==102467==    by 0x403D26: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::map(std::less<char> const&, std::allocator<ft::pair<char const, int> > const&) (map.hpp:61)
==102467==    by 0x4032B7: test_erase() (6.cpp:226)
==102467==    by 0x4036B8: main (6.cpp:281)
==102467== 
==102467== 64 bytes in 1 blocks are still reachable in loss record 2 of 7
==102467==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==102467==    by 0x407606: __gnu_cxx::new_allocator<ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==102467==    by 0x407402: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::_init_leaf() (map.hpp:147)
==102467==    by 0x403D26: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::map(std::less<char> const&, std::allocator<ft::pair<char const, int> > const&) (map.hpp:61)
==102467==    by 0x4032B7: test_erase() (6.cpp:226)
==102467==    by 0x4036B8: main (6.cpp:281)
==102467== 
==102467== 64 bytes in 1 blocks are still reachable in loss record 3 of 7
==102467==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==102467==    by 0x407606: __gnu_cxx::new_allocator<ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==102467==    by 0x40783D: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::add_a_node(ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > >*, unsigned long, char const&) (map.hpp:152)
==102467==    by 0x403EA4: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::operator[](char const&) (map.hpp:126)
==102467==    by 0x40340E: test_erase() (6.cpp:246)
==102467==    by 0x4036B8: main (6.cpp:281)
==102467== 
==102467== 64 bytes in 1 blocks are still reachable in loss record 4 of 7
==102467==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==102467==    by 0x407606: __gnu_cxx::new_allocator<ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==102467==    by 0x40783D: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::add_a_node(ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > >*, unsigned long, char const&) (map.hpp:152)
==102467==    by 0x403EA4: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::operator[](char const&) (map.hpp:126)
==102467==    by 0x403462: test_erase() (6.cpp:248)
==102467==    by 0x4036B8: main (6.cpp:281)
==102467== 
==102467== 64 bytes in 1 blocks are still reachable in loss record 5 of 7
==102467==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==102467==    by 0x407606: __gnu_cxx::new_allocator<ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==102467==    by 0x40783D: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::add_a_node(ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > >*, unsigned long, char const&) (map.hpp:152)
==102467==    by 0x403EA4: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::operator[](char const&) (map.hpp:126)
==102467==    by 0x40348C: test_erase() (6.cpp:249)
==102467==    by 0x4036B8: main (6.cpp:281)
==102467== 
==102467== 64 bytes in 1 blocks are still reachable in loss record 6 of 7
==102467==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==102467==    by 0x407606: __gnu_cxx::new_allocator<ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==102467==    by 0x40783D: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::add_a_node(ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > >*, unsigned long, char const&) (map.hpp:152)
==102467==    by 0x403EA4: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::operator[](char const&) (map.hpp:126)
==102467==    by 0x4034B6: test_erase() (6.cpp:250)
==102467==    by 0x4036B8: main (6.cpp:281)
==102467== 
==102467== 64 bytes in 1 blocks are still reachable in loss record 7 of 7
==102467==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==102467==    by 0x407606: __gnu_cxx::new_allocator<ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==102467==    by 0x40783D: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::add_a_node(ft::node<char const, int, std::less<char const>, std::allocator<ft::pair<char const, int> > >*, unsigned long, char const&) (map.hpp:152)
==102467==    by 0x403EA4: ft::map<char, int, std::less<char>, std::allocator<ft::pair<char const, int> > >::operator[](char const&) (map.hpp:126)
==102467==    by 0x4034E0: test_erase() (6.cpp:251)
==102467==    by 0x4036B8: main (6.cpp:281)
==102467== 
==102467== LEAK SUMMARY:
==102467==    definitely lost: 0 bytes in 0 blocks
==102467==    indirectly lost: 0 bytes in 0 blocks
==102467==      possibly lost: 0 bytes in 0 blocks
==102467==    still reachable: 448 bytes in 7 blocks
==102467==         suppressed: 0 bytes in 0 blocks
==102467== 
==102467== For lists of detected and suppressed errors, rerun with: -s
==102467== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
